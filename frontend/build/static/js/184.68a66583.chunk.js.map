{"version":3,"file":"static/js/184.68a66583.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFOtp.js","components/hook-form/RHFTextField.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/preview/cropImage.js","components/upload/preview/AvatarCropper.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","sections/auth/RegisterForm.js","pages/auth/Register.js","utils/socialLoginHelpers.js","sections/auth/AuthSocial.js"],"sourcesContent":["import { FormProvider as Form } from \"react-hook-form\";\n\nconst FormProvider = ({ children, onSubmit, methods }) => {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n};\n\nexport default FormProvider;\n","import { Stack, TextField } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Controller, useFormContext } from \"react-hook-form\";\n\n// Props validation\nRHFOtp.propTypes = {\n  keyName: PropTypes.string,\n  inputs: PropTypes.array,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFOtp({\n  keyName = \"\",\n  helperText,\n  inputs = [],\n  ...other\n}) {\n  const otpsRef = useRef(null);\n\n  const { control, setValue } = useFormContext();\n\n  const handleChangeWithNextField = (event, handleChange) => {\n    const { maxLength, name } = event.target;\n    const fieldIndex = name.replace(keyName, \"\");\n\n    const fieldIntIndex = Number(fieldIndex);\n    const prevField = document.querySelector(\n      `input[name=${keyName}${fieldIntIndex - 1}]`\n    );\n\n    let value = event.target.value.toUpperCase(); // Convert input value to uppercase\n\n    if (value.length === 0 && prevField !== null) {\n      event.preventDefault(); // Prevent the default behavior\n      prevField.focus(); // Move focus to the previous field\n      setValue(name, \"\"); // Clear the current field's value\n    } else if (value.length > maxLength) {\n      value = value[0];\n    } else if (value.length >= maxLength && fieldIntIndex < 6) {\n      const nextField = document.querySelector(\n        `input[name=${keyName}${fieldIntIndex + 1}]`\n      );\n      if (nextField !== null) {\n        nextField.focus();\n      }\n    }\n\n    setValue(name, value); // Set the uppercase value using setValue\n\n    handleChange(event);\n  };\n\n  const handlePaste = (event) => {\n    event.preventDefault(); // Prevent the default paste behavior\n\n    const pastedData = event.clipboardData.getData(\"text\");\n    const otpArray = pastedData.split(\"\");\n\n    otpArray.forEach((char, index) => {\n      const fieldName = `${keyName}${index + 1}`;\n      setValue(fieldName, char.toUpperCase()); // Set the uppercase value using setValue\n    });\n  };\n\n  return (\n    <Stack\n      direction={\"row\"}\n      justifyContent={\"center\"}\n      spacing={2}\n      ref={otpsRef}\n      onPaste={handlePaste} // paste event handler\n    >\n      {inputs.map((name, index) => (\n        <Controller\n          key={name}\n          name={`${keyName}${index + 1}`}\n          render={({ field, fieldState: { error } }) => (\n            <TextField\n              {...field}\n              error={!!error}\n              autoFocus={index === 0}\n              placeholder={`-`}\n              onInput={(event) => {\n                event.target.value = event.target.value.toUpperCase();\n                handleChangeWithNextField(event, field.onChange);\n              }}\n              onChange={(event) => {\n                handleChangeWithNextField(event, field.onChange);\n              }}\n              onFocus={(event) => event.currentTarget.select()}\n              InputProps={{\n                sx: {\n                  \"& input\": { textAlign: \"center\" },\n                },\n              }}\n              inputProps={{\n                maxLength: 1,\n                type: \"text\", // Change type to \"text\" for uppercase input\n              }}\n              helperText={error ? error.message : helperText}\n              {...other}\n            />\n          )}\n          control={control}\n        ></Controller>\n      ))}\n    </Stack>\n  );\n}\n","// using React Hook Form\n\nimport { TextField, useTheme } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext, Controller } from \"react-hook-form\";\n\n// Props validation\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n  const theme = useTheme();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          sx={{ mt: 1 }}\n          {...field}\n          fullWidth\n          value={\n            typeof field.value === \"number\" && field.value === 0\n              ? \"\"\n              : field.value\n          }\n          InputProps={{\n            sx: {\n              \"& textarea\": {\n                scrollbarColor: `${theme.palette.primary.main} transparent`,\n                scrollbarWidth: \"thin\",\n                \"&::-webkit-scrollbar\": {\n                  width: \"5px\",\n                },\n                \"&::-webkit-scrollbar-thumb\": {\n                  backgroundColor: theme.palette.primary.main,\n                  borderRadius: \"10px\",\n                },\n                \"&::-webkit-scrollbar-track\": {\n                  backgroundColor: \"transparent\",\n                },\n              },\n            },\n          }}\n          error={!!error}\n          helperText={error ? error.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { forwardRef } from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n// @mui\nimport { Box } from \"@mui/material\";\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = \"blur\", sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={\n          disabledEffect ? \"/assets/transparent.png\" : \"/assets/placeholder.svg\"\n        }\n        sx={{ width: 1, height: 1, objectFit: \"cover\" }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: \"block\",\n          overflow: \"hidden\",\n          position: \"relative\",\n          \"& .wrapper\": {\n            width: 1,\n            height: 1,\n            backgroundSize: \"cover !important\",\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from \"prop-types\";\n\nimport Image from \"../../Image\";\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === \"string\" ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: \"hidden\",\n        borderRadius: \"50%\",\n        position: \"absolute\",\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","export const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", (error) => reject(error));\n    image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url;\n  });\n\nexport function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation);\n\n  return {\n    width:\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height:\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  };\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport default async function getCroppedImg(\n  imageSrc,\n  pixelCrop,\n  rotation = 0,\n  flip = { horizontal: false, vertical: false }\n) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    return null;\n  }\n\n  const rotRad = getRadianAngle(rotation);\n\n  // calculate bounding box of the rotated image\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\n    image.width,\n    image.height,\n    rotation\n  );\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth;\n  canvas.height = bBoxHeight;\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2);\n  ctx.rotate(rotRad);\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1);\n  ctx.translate(-image.width / 2, -image.height / 2);\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0);\n\n  const croppedCanvas = document.createElement(\"canvas\");\n\n  const croppedCtx = croppedCanvas.getContext(\"2d\");\n\n  if (!croppedCtx) {\n    return null;\n  }\n\n  // Set the size of the cropped canvas\n  croppedCanvas.width = pixelCrop.width;\n  croppedCanvas.height = pixelCrop.height;\n\n  // Draw the cropped image onto the new canvas\n  croppedCtx.drawImage(\n    canvas,\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height,\n    0,\n    0,\n    pixelCrop.width,\n    pixelCrop.height\n  );\n\n  // As Base64 string\n  // return croppedCanvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    croppedCanvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file));\n    }, \"image/jpeg\");\n  });\n}\n","import { useState } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Stack,\n  Typography,\n  Button,\n  Slider,\n} from \"@mui/material\";\nimport { XCircle } from \"phosphor-react\";\nimport Cropper from \"react-easy-crop\";\nimport getCroppedImg from \"./cropImage\";\n\nconst AvatarCropper = ({ open, handleClose, image, onUse }) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [rotation, setRotation] = useState(0);\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  };\n\n  const getCroppedImgURL = async () => {\n    try {\n      const croppedImage = await getCroppedImg(\n        image,\n        croppedAreaPixels,\n        rotation\n      );\n      onUse(croppedImage);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      fullWidth\n      maxWidth={\"xs\"}\n      aria-labelledby=\"responsive-dialog-title\"\n      keepMounted\n      sx={{ p: 4 }}\n    >\n      {/* Header for Dialog */}\n      <DialogTitle sx={{ mb: 3 }} id=\"responsive-dialog-title\">\n        <Stack\n          direction={\"row\"}\n          justifyContent={\"space-between\"}\n          alignItems={\"center\"}\n          mb={1}\n        >\n          <Typography variant=\"h5\" textAlign={\"center\"} p={1.5}>\n            Make your Avatar\n          </Typography>\n          {/* Close Button */}\n          <IconButton onClick={handleClose}>\n            <XCircle weight=\"fill\" />\n          </IconButton>\n        </Stack>\n        <Stack justifyContent={\"center\"} alignItems={\"center\"}></Stack>\n      </DialogTitle>\n\n      {/* Form */}\n      <DialogContent\n        sx={{ overflowY: \"scroll\", height: \"25rem\", position: \"relative\" }}\n        className=\"scrollbar\"\n      >\n        <Cropper\n          image={image}\n          crop={crop}\n          cropShape=\"round\"\n          rotation={rotation}\n          zoom={zoom}\n          aspect={1 / 1}\n          onCropChange={setCrop}\n          onRotationChange={setRotation}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Stack\n          justifyContent={\"space-between\"}\n          sx={{ flexGrow: 1 }}\n          direction={\"column\"}\n        >\n          {/* Cropper Actions */}\n          <Stack direction={\"column\"} justifyContent={\"flex-start\"}>\n            <div>\n              <Typography variant=\"overline\">Zoom</Typography>\n              <Slider\n                value={zoom}\n                min={1}\n                max={8}\n                step={0.1}\n                aria-labelledby=\"Zoom\"\n                onChange={(e, zoom) => setZoom(zoom)}\n              />\n            </div>\n            <div>\n              <Typography variant=\"overline\">Rotation</Typography>\n              <Slider\n                value={rotation}\n                min={0}\n                max={360}\n                step={90}\n                aria-labelledby=\"Rotation\"\n                onChange={(e, rotation) => setRotation(rotation)}\n              />\n            </div>\n          </Stack>\n          {/* Main Actions */}\n          <Stack direction={\"row\"} spacing={1} justifyContent={\"flex-end\"}>\n            <Button autoFocus onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={getCroppedImgURL} autoFocus>\n              Confirm\n            </Button>\n          </Stack>\n        </Stack>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AvatarCropper;\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Typography, IconButton } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport { Image, Trash, Pen } from \"phosphor-react\";\n\nimport AvatarPreview from \"./preview/AvatarPreview\";\n\nconst Container = styled(\"div\")({\n  position: \"relative\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n});\n\nconst StyledDropZoneContainer = styled(\"div\")({\n  position: \"relative\",\n});\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledOptionButton = styled(IconButton)(({ theme, setval }) => ({\n  position: \"absolute\",\n  top: theme.spacing(14.5),\n  right: theme.spacing(setval),\n  zIndex: 10,\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.background.default,\n  border: `1px solid ${alpha(theme.palette.grey[500], 0.32)}`,\n  borderRadius: \"50%\",\n  padding: theme.spacing(1),\n  \"&:hover\": {\n    backgroundColor: theme.palette.background.neutral,\n  },\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  onRemove: PropTypes.func,\n  onCrop: PropTypes.func,\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  onRemove,\n  onCrop,\n  sx,\n  ...other\n}) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\n    useDropzone({\n      multiple: false,\n      disabled,\n      ...other,\n    });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <Container>\n      <StyledDropZoneContainer>\n        <StyledDropZone\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && {\n              opacity: 0.72,\n            }),\n            ...(isError && {\n              borderColor: \"error.light\",\n              ...(hasFile && {\n                bgcolor: \"error.lighter\",\n              }),\n            }),\n            ...(disabled && {\n              opacity: 0.48,\n              pointerEvents: \"none\",\n            }),\n            ...(hasFile && {\n              \"&:hover\": {\n                \"& .placeholder\": {\n                  opacity: 1,\n                },\n              },\n            }),\n            ...sx,\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {hasFile && <AvatarPreview file={file} />}\n\n          <StyledPlaceholder\n            className=\"placeholder\"\n            sx={{\n              \"&:hover\": {\n                opacity: 0.72,\n              },\n              ...(hasFile && {\n                zIndex: 9,\n                opacity: 0,\n                color: \"common.white\",\n                bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n              }),\n              ...(isError && {\n                color: \"error.main\",\n                bgcolor: \"error.lighter\",\n              }),\n            }}\n          >\n            <Image />\n\n            <Typography variant=\"caption\">\n              {file ? \"Update photo\" : \"Upload photo\"}\n            </Typography>\n          </StyledPlaceholder>\n        </StyledDropZone>\n\n        {hasFile && (\n          <>\n            <StyledOptionButton size=\"small\" onClick={onCrop} setval={13}>\n              <Pen />\n            </StyledOptionButton>\n\n            <StyledOptionButton size=\"small\" onClick={onRemove} setval={0.5}>\n              <Trash />\n            </StyledOptionButton>\n          </>\n        )}\n      </StyledDropZoneContainer>\n\n      {helperText && helperText}\n    </Container>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useFormContext, Controller } from \"react-hook-form\";\nimport { FormHelperText } from \"@mui/material\";\nimport { UploadAvatar } from \"../upload\";\nimport AvatarCropper from \"../upload/preview/AvatarCropper\";\nimport { useEffect, useState } from \"react\";\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n  formState: PropTypes.object,\n  onRemove: PropTypes.func,\n  onEdit: PropTypes.func,\n  defaultValues: PropTypes.object,\n};\n\nexport function RHFUploadAvatar({\n  name,\n  formState,\n  onRemove,\n  onEdit,\n  defaultValues,\n  ...other\n}) {\n  const methods = useFormContext(); // Use useFormContext to get the form methods\n\n  const [cropperOpen, setCropperOpen] = useState(false);\n  const [initialImageAdded, setInitialImageAdded] = useState(false);\n\n  const handleOpenCropper = () => {\n    setCropperOpen(true);\n  };\n\n  const handleCloseCropper = () => {\n    setCropperOpen(false);\n  };\n\n  const handleUseCroppedImage = async (croppedImage) => {\n    methods.setValue(name, croppedImage);\n    onEdit(true);\n    handleCloseCropper();\n  };\n\n  useEffect(() => {\n    const imageValue = methods.getValues(name);\n\n    // Check if the image is present, not initially added, and not on form submission\n    if (\n      !defaultValues[name] &&\n      imageValue &&\n      !initialImageAdded &&\n      !methods.formState.isSubmitSuccessful\n    ) {\n      setInitialImageAdded(true);\n      handleOpenCropper();\n    }\n  }, [methods, initialImageAdded, name, defaultValues]);\n\n  const handleOnRemove = () => {\n    setInitialImageAdded(false);\n    onRemove();\n  };\n\n  return (\n    <div>\n      <Controller\n        name={name}\n        control={methods.control}\n        render={({ field, fieldState: { error } }) => (\n          <div>\n            {cropperOpen && (\n              <AvatarCropper\n                open={cropperOpen}\n                handleClose={handleCloseCropper}\n                image={field.value}\n                onUse={handleUseCroppedImage}\n              />\n            )}\n            <UploadAvatar\n              accept={{\n                \"image/jpeg\": \".jpg, .jpeg\",\n                \"image/png\": \".png\",\n                \"image/webp\": \".webp\",\n              }}\n              error={!!error}\n              file={field.value}\n              onRemove={handleOnRemove}\n              formState={formState}\n              onCrop={handleOpenCropper}\n              {...other}\n            />\n\n            {!!error && (\n              <FormHelperText error sx={{ px: 2, textAlign: \"center\" }}>\n                {(!formState.isSubmitSuccessful || formState.isDirty) &&\n                  error.message}\n              </FormHelperText>\n            )}\n          </div>\n        )}\n      />\n    </div>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  IconButton,\n  InputAdornment,\n  Stack,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { Eye, EyeSlash } from \"phosphor-react\";\nimport { LoadingButton } from \"@mui/lab\";\n\n// redux imports\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RegisterUser } from \"../../redux/slices/actions/authActions\";\n\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\n\nconst RegisterForm = () => {\n  // dispatch from redux\n  const { isLoading } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  // hide and show password controller\n  const [showPassword, setShowPassword] = useState(false);\n  const recaptchaRef = useRef(null);\n\n  //  Register Schema\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .required(\"First Name Required\"),\n      // .min(3, \"First Name must be atleast 3 charaters long\")\n      // .max(16, \"First Name cannot be more than 16 characters long\")\n      // .matches(/^[a-zA-Z]+$/, \"Name can only contain alphabets\"),\n    lastName: Yup.string()\n      .required(\"Last Name Required\"),\n      // .min(3, \"Last Name must be atleast 3 charaters long\")\n      // .max(16, \"Last Name cannot be more than 16 characters long\")\n      // .matches(/^[a-zA-Z]+$/, \"Name can only contain alphabets\"),\n\n    email: Yup.string().required(\"Email Required\").email(\"Invalid Email\"),\n\n    password: Yup.string()\n      .required(\"Password Required\"),\n      // .min(8, \"Password must be 8 characters long\")\n      // .max(16, \"Password cannot be more that 16 characters\")\n      // .matches(/[0-9]/, \"Password requires a number\")\n      // .matches(/[a-z]/, \"Password requires a lowercase letter\")\n      // .matches(/[A-Z]/, \"Password requires an uppercase letter\")\n      // .matches(/[^\\w]/, \"Password requires a symbol\"),\n  });\n\n  //   Labels\n  const defaultValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const methods = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(RegisterSchema),\n    defaultValues,\n  });\n\n  const { handleSubmit } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      // api request to backend for registering user using redux\n      dispatch(RegisterUser({ ...data, recaptchaRef }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // breakpoint\n  const isSmallScreen = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={isSmallScreen ? 0 : 3}>\n        <Stack\n          direction={{ xs: \"column\", md: \"row\" }}\n          alignItems={\"center\"}\n          spacing={isSmallScreen ? 0 : 2}\n          justifyContent={\"center\"}\n        >\n          <RHFTextField name=\"firstName\" label=\"First Name\" />\n          <RHFTextField name=\"lastName\" label=\"Last Name\" />\n        </Stack>\n        <RHFTextField name=\"email\" label=\"Email\" />\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <ReCAPTCHA\n          ref={recaptchaRef}\n          size=\"invisible\"\n          sitekey={process.env.REACT_APP_RECAPTCHA_CLIENT}\n          theme=\"dark\"\n        />\n\n        <LoadingButton\n          loading={isLoading}\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{\n            mt: 3,\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            \"&:hover\": {\n              bgcolor: \"text.primary\",\n              color: (theme) =>\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            },\n          }}\n        >\n          Register\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n};\n\nexport default RegisterForm;\n","import { Link, Stack, Typography } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport RegisterForm from \"../../sections/auth/RegisterForm\";\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\n\nconst Register = () => {\n  return (\n    <Stack spacing={2} sx={{ my: 5, position: \"realative\" }}>\n      <Stack justifyContent={\"center\"} alignItems={\"center\"} spacing={1}>\n        <Typography component={\"h1\"} variant=\"h4\">\n          Let's Get You Registered\n        </Typography>\n        <Stack direction={\"row\"} spacing={0.5}>\n          <Typography variant=\"body2\">Already Registered?</Typography>\n          <Link to=\"/auth/login\" component={RouterLink} variant=\"subtitle2\">\n            Sign In\n          </Link>\n        </Stack>\n      </Stack>\n\n      {/* Form Section */}\n      <RegisterForm />\n\n      {/* Terms and Conditions */}\n      <Typography\n        component={\"div\"}\n        sx={{\n          color: \"text.secondary\",\n          mt: 3,\n          typography: \"caption\",\n          textAlign: \"center\",\n        }}\n      >\n        {\"By creating an account\"} <br /> {\"You agree to the \"}\n        <Link to=\"/auth/login\" component={RouterLink} underline=\"hover\">\n          Terms and Conditions\n        </Link>\n      </Typography>\n\n      {/* Auth Social login */}\n      <AuthSocial />\n    </Stack>\n  );\n};\n\nexport default Register;\n","export const getOAuthCode = (url) => {\n  const oauthAuthUrl = url;\n\n  return new Promise((resolve, reject) => {\n    const popup = window.open(oauthAuthUrl, \"_blank\", \"width=600,height=600\");\n\n    const checkPopupClosed = setInterval(() => {\n      if (!popup || popup.closed || popup.closed === undefined) {\n        clearInterval(checkPopupClosed);\n\n        reject(new Error(\"Popup closed before authorization\"));\n      } else {\n        try {\n          const urlParams = new URLSearchParams(popup.location.search);\n          const code = urlParams.get(\"code\");\n          if (code) {\n            console.log(urlParams);\n            popup.close();\n            clearInterval(checkPopupClosed);\n            resolve(code);\n          }\n        } catch (error) {\n          //\n        }\n      }\n    }, 1000);\n  });\n};\n","import { Divider, IconButton, Stack } from \"@mui/material\";\nimport { GithubLogo, GoogleLogo } from \"phosphor-react\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\n\nimport { useDispatch } from \"react-redux\";\nimport {\n  GithubLogin,\n  GoogleLogin,\n  LinkedinLogin,\n} from \"../../redux/slices/actions/authActions\";\n\nimport { getOAuthCode } from \"../../utils/socialLoginHelpers\";\nimport Iconify from \"../../components/Iconify\";\nimport { ShowSnackbar } from \"../../redux/slices/userSlice\";\n\nconst AuthSocial = () => {\n  const dispatch = useDispatch();\n\n  const baseURL = window.location.origin;\n\n  // ---------- inner functions ----------\n\n  const showSnackbar = (socialType) => {\n    dispatch(\n      ShowSnackbar({\n        severity: \"error\",\n        message: `Unable to login using ${socialType}`,\n      })\n    );\n  };\n\n  const googleLogin = useGoogleLogin({\n    onSuccess: (tokenResponse) => {\n      dispatch(GoogleLogin(tokenResponse));\n    },\n    onError: (error) => {\n      showSnackbar(\"google\");\n      console.log(error);\n    },\n  });\n\n  const githubLogin = async () => {\n    try {\n      const code = await getOAuthCode(\n        `https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_GITHUB_AUTH_CLIENT_ID}&scope=user`\n      );\n\n      dispatch(GithubLogin(code));\n    } catch (error) {\n      showSnackbar(\"github\");\n      console.log(\"Github Error:\", error.message);\n    }\n  };\n\n  const linkedinLogin = async () => {\n    try {\n      const code = await getOAuthCode(\n        `https://linkedin.com/oauth/v2/authorization?client_id=${process.env.REACT_APP_LINKEDIN_AUTH_CLIENT_ID}&response_type=code&scope=email profile openid&redirect_uri=${baseURL}/auth/login`\n      );\n\n      dispatch(LinkedinLogin(code));\n    } catch (error) {\n      showSnackbar(\"linkedin\");\n      console.log(\"Linkedin Error:\", error.message);\n    }\n  };\n\n  // -------------------------------------\n\n  return (\n    <>\n      <Divider\n        sx={{\n          my: 2.5,\n          typography: \"overline\",\n          color: \"text.disabled\",\n        }}\n      >\n        OR\n      </Divider>\n      <Stack direction={\"row\"} spacing={2} justifyContent={\"center\"}>\n        <IconButton onClick={() => googleLogin()}>\n          <GoogleLogo color=\"#DF3E30\" />\n        </IconButton>\n        <IconButton color=\"inherit\" onClick={() => githubLogin()}>\n          <GithubLogo />\n        </IconButton>\n        <IconButton onClick={() => linkedinLogin()}>\n          <Iconify icon={\"ri:linkedin-line\"} color=\"#1C9CEA\" />\n        </IconButton>\n      </Stack>\n    </>\n  );\n};\n\nexport default AuthSocial;\n"],"names":["_ref","children","onSubmit","methods","_jsx","Form","RHFOtp","keyName","helperText","inputs","other","otpsRef","useRef","control","setValue","useFormContext","handleChangeWithNextField","event","handleChange","maxLength","name","target","fieldIndex","replace","fieldIntIndex","Number","prevField","document","querySelector","concat","value","toUpperCase","length","preventDefault","focus","nextField","Stack","direction","justifyContent","spacing","ref","onPaste","clipboardData","getData","split","forEach","char","index","fieldName","map","Controller","render","_ref2","field","fieldState","error","TextField","autoFocus","placeholder","onInput","onChange","onFocus","currentTarget","select","InputProps","sx","textAlign","inputProps","type","message","RHFTextField","theme","useTheme","mt","fullWidth","scrollbarColor","palette","primary","main","scrollbarWidth","width","backgroundColor","borderRadius","forwardRef","disabledEffect","effect","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","height","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","Image","alt","src","zIndex","getRadianAngle","degreeValue","Math","PI","async","getCroppedImg","imageSrc","pixelCrop","rotation","arguments","flip","horizontal","vertical","image","url","Promise","resolve","reject","addEventListener","setAttribute","canvas","createElement","ctx","getContext","rotRad","bBoxWidth","bBoxHeight","abs","cos","sin","rotateSize","translate","rotate","scale","drawImage","croppedCanvas","croppedCtx","x","y","toBlob","URL","createObjectURL","open","handleClose","onUse","crop","setCrop","useState","setRotation","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","_jsxs","Dialog","onClose","maxWidth","keepMounted","p","DialogTitle","mb","id","alignItems","Typography","variant","IconButton","onClick","XCircle","weight","DialogContent","overflowY","className","Cropper","cropShape","aspect","onCropChange","onRotationChange","onCropComplete","croppedArea","onZoomChange","DialogActions","flexGrow","Slider","min","max","step","e","Button","croppedImage","console","Container","styled","flexDirection","StyledDropZoneContainer","StyledDropZone","margin","cursor","border","alpha","grey","StyledOptionButton","setval","top","right","color","text","background","default","padding","neutral","StyledPlaceholder","_ref3","disabled","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","_ref4","onRemove","onCrop","getRootProps","getInputProps","isDragActive","isDragReject","useDropzone","multiple","hasFile","isError","opacity","borderColor","bgcolor","pointerEvents","_Fragment","size","Pen","Trash","RHFUploadAvatar","formState","onEdit","defaultValues","cropperOpen","setCropperOpen","initialImageAdded","setInitialImageAdded","handleOpenCropper","handleCloseCropper","handleUseCroppedImage","useEffect","imageValue","getValues","isSubmitSuccessful","handleOnRemove","AvatarCropper","accept","FormHelperText","px","isDirty","RegisterForm","isLoading","useSelector","state","auth","dispatch","useDispatch","showPassword","setShowPassword","recaptchaRef","RegisterSchema","Yup","shape","firstName","required","lastName","email","password","useForm","mode","resolver","yupResolver","handleSubmit","isSmallScreen","useMediaQuery","breakpoints","down","FormProvider","RegisterUser","data","xs","md","label","endAdornment","InputAdornment","Eye","EyeSlash","ReCAPTCHA","sitekey","process","LoadingButton","loading","Register","my","Link","to","RouterLink","typography","underline","AuthSocial","getOAuthCode","oauthAuthUrl","popup","window","checkPopupClosed","setInterval","closed","clearInterval","Error","urlParams","URLSearchParams","location","search","code","get","log","close","baseURL","origin","showSnackbar","socialType","ShowSnackbar","severity","googleLogin","useGoogleLogin","onSuccess","tokenResponse","GoogleLogin","onError","Divider","GoogleLogo","GithubLogin","githubLogin","GithubLogo","LinkedinLogin","linkedinLogin","Iconify","icon"],"sourceRoot":""}